@using ShopOnline.Extension
@model List<ShopOnline.Models.ProductViewModel>
@foreach (var product in Model)
{
    <div class="col-md-4 col-sm-6">
        <div class="product">
            <div class="image" style="height: 262px;">
                <a href="@Url.RouteUrl("NewDetail", new {id =product.ProductId, text =Html.ToFriendlyUrl(product.ProductName)})">
                    <img src="@Url.Content(product.ProductImageDisplay.ProductImageUrl)" alt="" class="img-responsive">
                </a>
            </div>
            <!-- /.image -->
            <div class="text">
                <h3><a href="@Url.RouteUrl("NewDetail", new {id =product.ProductId, text =Html.ToFriendlyUrl(product.ProductName)})">@product.ProductName</a></h3>
                <p class="price">@product.Price.ToSystemFormat()</p>
                <p class="buttons">
                    <a href="@Url.RouteUrl("NewDetail", new {id =product.ProductId, text =Html.ToFriendlyUrl(product.ProductName)})" class="btn btn-default">Xem Chi Tiết</a>
                    <a product-id="@product.ProductId" class="btn btn-template-main pointer add-to-cart"><i class="fa fa-shopping-cart"></i>Thêm Vào Giỏ Hàng</a>
                </p>
            </div>
            <!-- /.text -->
            @if (product.IsNew.HasValue && product.IsNew.Value)
            {
                <div class="ribbon new">
                    <div class="theribbon">Mới</div>
                    <div class="ribbon-background"></div>
                </div>
                <!-- /.ribbon -->
            }

        </div>
        <!-- /.product -->
    </div>
}